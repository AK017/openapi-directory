swagger: '2.0'
schemes:
  - https
  - http
host: sagemaker.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: Definition of the public APIs exposed by SageMaker
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon SageMaker Service
  version: '2017-07-24'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sagemaker-2017-07-24.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: sagemaker
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/sagemaker/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds or overwrites one or more tags for the specified Amazon SageMaker resource. You can add tags to notebook instances, training jobs, models, endpoint configurations, and endpoints. </p> <p>Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>'
      operationId: AddTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsOutput'
  '/#CreateEndpoint':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an endpoint using the endpoint configuration specified in the request. Amazon SageMaker uses the endpoint to provision resources and deploy models. You create the endpoint configuration with the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html">CreateEndpointConfig</a> API. </p> <note> <p> Use this API only for hosting models using Amazon SageMaker hosting services. </p> </note> <p>The endpoint name must be unique within an AWS Region in your AWS account. </p> <p>When it receives the request, Amazon SageMaker creates the endpoint, launches the resources (ML compute instances), and deploys the model(s) on them. </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Creating</code>. After it creates the endpoint, it sets the status to <code>InService</code>. Amazon SageMaker can then process incoming requests for inferences. To check the status of an endpoint, use the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a> API.</p> <p>For an example, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/ex1.html">Exercise 1: Using the K-Means Algorithm Provided by Amazon SageMaker</a>. </p>'
      operationId: CreateEndpoint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateEndpointInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEndpointOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
  '/#CreateEndpointConfig':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an endpoint configuration that Amazon SageMaker hosting services uses to deploy models. In the configuration, you identify one or more models, created using the <code>CreateModel</code> API, to deploy and the resources that you want Amazon SageMaker to provision. Then you call the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html">CreateEndpoint</a> API.</p> <note> <p> Use this API only if you want to use Amazon SageMaker hosting services to deploy models into production. </p> </note> <p>In the request, you define one or more <code>ProductionVariant</code>s, each of which identifies a model. Each <code>ProductionVariant</code> parameter also describes the resources that you want Amazon SageMaker to provision. This includes the number and type of ML compute instances to deploy. </p> <p>If you are hosting multiple models, you also assign a <code>VariantWeight</code> to specify how much traffic you want to allocate to each model. For example, suppose that you want to host two models, A and B, and you assign traffic weight 2 for model A and 1 for model B. Amazon SageMaker distributes two-thirds of the traffic to Model A, and one-third to model B. </p>'
      operationId: CreateEndpointConfig
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateEndpointConfigInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEndpointConfigOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
  '/#CreateModel':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a model in Amazon SageMaker. In the request, you name the model and describe one or more containers. For each container, you specify the docker image containing inference code, artifacts (from prior training), and custom environment map that the inference code uses when you deploy the model into production. </p> <p>Use this API to create a model only if you want to use Amazon SageMaker hosting services. To host your model, you create an endpoint configuration with the <code>CreateEndpointConfig</code> API, and then create an endpoint with the <code>CreateEndpoint</code> API. </p> <p>Amazon SageMaker then deploys all of the containers that you defined for the model in the hosting environment. </p> <p>In the <code>CreateModel</code> request, you must define a container with the <code>PrimaryContainer</code> parameter. </p> <p>In the request, you also provide an IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute hosting instances. In addition, you also use the IAM role to manage permissions the inference code needs. For example, if the inference code access any other AWS resources, you grant necessary permissions via this role.</p>'
      operationId: CreateModel
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateModelInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateModelOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
  '/#CreateNotebookInstance':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook. </p> <p>In a <code>CreateNotebookInstance</code> request, specify the type of ML compute instance that you want to run. Amazon SageMaker launches the instance, installs common libraries that you can use to explore datasets for model training, and attaches an ML storage volume to the notebook instance. </p> <p>Amazon SageMaker also provides a set of example notebooks. Each notebook demonstrates how to use Amazon SageMaker with a specific algorithm or with a machine learning framework. </p> <p>After receiving the request, Amazon SageMaker does the following:</p> <ol> <li> <p>Creates a network interface in the Amazon SageMaker VPC.</p> </li> <li> <p>(Option) If you specified <code>SubnetId</code>, Amazon SageMaker creates a network interface in your own VPC, which is inferred from the subnet ID that you provide in the input. When creating this network interface, Amazon SageMaker attaches the security group that you specified in the request to the network interface that it creates in your VPC.</p> </li> <li> <p>Launches an EC2 instance of the type specified in the request in the Amazon SageMaker VPC. If you specified <code>SubnetId</code> of your VPC, Amazon SageMaker specifies both network interfaces when launching this instance. This enables inbound traffic from your own VPC to the notebook instance, assuming that the security groups allow it.</p> </li> </ol> <p>After creating the notebook instance, Amazon SageMaker returns its Amazon Resource Name (ARN).</p> <p>After Amazon SageMaker creates the notebook instance, you can connect to the Jupyter server and work in Jupyter notebooks. For example, you can write code to explore a dataset that you can use for model training, train a model, host models by creating Amazon SageMaker endpoints, and validate hosted models. </p> <p>For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How It Works</a>. </p>'
      operationId: CreateNotebookInstance
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateNotebookInstanceInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNotebookInstanceOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
  '/#CreateNotebookInstanceLifecycleConfig':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a lifecycle configuration that you can associate with a notebook instance. A <i>lifecycle configuration</i> is a collection of shell scripts that run when you create or start a notebook instance.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>'
      operationId: CreateNotebookInstanceLifecycleConfig
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateNotebookInstanceLifecycleConfigInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNotebookInstanceLifecycleConfigOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
  '/#CreatePresignedNotebookInstanceUrl':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a URL that you can use to connect to the Juypter server from a notebook instance. In the Amazon SageMaker console, when you choose <code>Open</code> next to a notebook instance, Amazon SageMaker opens a new tab showing the Jupyter server home page from the notebook instance. The console uses this API to get the URL and show the page. '
      operationId: CreatePresignedNotebookInstanceUrl
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePresignedNotebookInstanceUrlInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePresignedNotebookInstanceUrlOutput'
  '/#CreateTrainingJob':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p> Starts a model training job. After training completes, Amazon SageMaker saves the resulting model artifacts to an Amazon S3 location that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts in a deep learning service other than Amazon SageMaker, provided that you know how to use them for inferences. </p> <p>In the request body, you provide the following: </p> <ul> <li> <p> <code>AlgorithmSpecification</code> - Identifies the training algorithm to use. </p> </li> <li> <p> <code>HyperParameters</code> - Specify these algorithm-specific parameters to influence the quality of the final model. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p> </li> <li> <p> <code>InputDataConfig</code> - Describes the training dataset and the Amazon S3 location where it is stored.</p> </li> <li> <p> <code>OutputDataConfig</code> - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results of model training. </p> <p/> </li> <li> <p> <code>ResourceConfig</code> - Identifies the resources, ML compute instances, and ML storage volumes to deploy for model training. In distributed training, you specify more than one instance. </p> </li> <li> <p> <code>RoleARN</code> - The Amazon Resource Number (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during model training. You must grant this role the necessary permissions so that Amazon SageMaker can successfully complete model training. </p> </li> <li> <p> <code>StoppingCondition</code> - Sets a duration for training. Use this parameter to cap model training costs. </p> </li> </ul> <p> For more information about Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How It Works</a>. </p>'
      operationId: CreateTrainingJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateTrainingJobRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTrainingJobResponse'
        '480':
          description: ResourceInUse
          schema:
            $ref: '#/definitions/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
  '/#DeleteEndpoint':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes an endpoint. Amazon SageMaker frees up all of the resources that were deployed when the endpoint was created. '
      operationId: DeleteEndpoint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEndpointInput'
      responses:
        '200':
          description: Success
  '/#DeleteEndpointConfig':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes an endpoint configuration. The <code>DeleteEndpoingConfig</code> API deletes only the specified configuration. It does not delete endpoints created using the configuration. '
      operationId: DeleteEndpointConfig
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEndpointConfigInput'
      responses:
        '200':
          description: Success
  '/#DeleteModel':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes a model. The <code>DeleteModel</code> API deletes only the model entry that was created in Amazon SageMaker when you called the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html">CreateModel</a> API. It does not delete model artifacts, inference code, or the IAM role that you specified when creating the model. '
      operationId: DeleteModel
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteModelInput'
      responses:
        '200':
          description: Success
  '/#DeleteNotebookInstance':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p> Deletes an Amazon SageMaker notebook instance. Before you can delete a notebook instance, you must call the <code>StopNotebookInstance</code> API. </p> <important> <p>When you delete a notebook instance, you lose all of your data. Amazon SageMaker removes the ML compute instance, and deletes the ML storage volume and the network interface associated with the notebook instance. </p> </important>'
      operationId: DeleteNotebookInstance
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteNotebookInstanceInput'
      responses:
        '200':
          description: Success
  '/#DeleteNotebookInstanceLifecycleConfig':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a notebook instance lifecycle configuration.
      operationId: DeleteNotebookInstanceLifecycleConfig
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteNotebookInstanceLifecycleConfigInput'
      responses:
        '200':
          description: Success
  '/#DeleteTags':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes the specified tags from an Amazon SageMaker resource.</p> <p>To list a resource''s tags, use the <code>ListTags</code> API. </p>'
      operationId: DeleteTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTagsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTagsOutput'
  '/#DescribeEndpoint':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns the description of an endpoint.
      operationId: DescribeEndpoint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEndpointInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEndpointOutput'
      x-waiters:
        - acceptors:
            - argument: EndpointStatus
              expected: InService
              matcher: path
              state: success
            - argument: EndpointStatus
              expected: Failed
              matcher: path
              state: failure
            - expected: ValidationException
              matcher: error
              state: failure
          delay: 30
          maxAttempts: 120
          operation: DescribeEndpoint
        - acceptors:
            - expected: ValidationException
              matcher: error
              state: success
            - argument: EndpointStatus
              expected: Failed
              matcher: path
              state: failure
          delay: 30
          maxAttempts: 60
          operation: DescribeEndpoint
  '/#DescribeEndpointConfig':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns the description of an endpoint configuration created using the <code>CreateEndpointConfig</code> API.
      operationId: DescribeEndpointConfig
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEndpointConfigInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEndpointConfigOutput'
  '/#DescribeModel':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes a model that you created using the <code>CreateModel</code> API.
      operationId: DescribeModel
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeModelInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeModelOutput'
  '/#DescribeNotebookInstance':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns information about a notebook instance.
      operationId: DescribeNotebookInstance
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeNotebookInstanceInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeNotebookInstanceOutput'
      x-waiters:
        - acceptors:
            - argument: NotebookInstanceStatus
              expected: InService
              matcher: path
              state: success
            - argument: NotebookInstanceStatus
              expected: Failed
              matcher: path
              state: failure
          delay: 30
          maxAttempts: 60
          operation: DescribeNotebookInstance
        - acceptors:
            - argument: NotebookInstanceStatus
              expected: Stopped
              matcher: path
              state: success
            - argument: NotebookInstanceStatus
              expected: Failed
              matcher: path
              state: failure
          delay: 30
          maxAttempts: 60
          operation: DescribeNotebookInstance
        - acceptors:
            - expected: ValidationException
              matcher: error
              state: success
            - argument: NotebookInstanceStatus
              expected: Failed
              matcher: path
              state: failure
          delay: 30
          maxAttempts: 60
          operation: DescribeNotebookInstance
  '/#DescribeNotebookInstanceLifecycleConfig':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns a description of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>'
      operationId: DescribeNotebookInstanceLifecycleConfig
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeNotebookInstanceLifecycleConfigInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeNotebookInstanceLifecycleConfigOutput'
  '/#DescribeTrainingJob':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns information about a training job.
      operationId: DescribeTrainingJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTrainingJobRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTrainingJobResponse'
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      x-waiters:
        - acceptors:
            - argument: TrainingJobStatus
              expected: Completed
              matcher: path
              state: success
            - argument: TrainingJobStatus
              expected: Stopped
              matcher: path
              state: success
            - argument: TrainingJobStatus
              expected: Failed
              matcher: path
              state: failure
            - expected: ValidationException
              matcher: error
              state: failure
          delay: 120
          maxAttempts: 180
          operation: DescribeTrainingJob
  '/#ListEndpointConfigs':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists endpoint configurations.
      operationId: ListEndpointConfigs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListEndpointConfigsInput'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEndpointConfigsOutput'
  '/#ListEndpoints':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists endpoints.
      operationId: ListEndpoints
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListEndpointsInput'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEndpointsOutput'
  '/#ListModels':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Lists models created with the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html">CreateModel</a> API.'
      operationId: ListModels
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListModelsInput'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListModelsOutput'
  '/#ListNotebookInstanceLifecycleConfigs':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists notebook instance lifestyle configurations created with the API.
      operationId: ListNotebookInstanceLifecycleConfigs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListNotebookInstanceLifecycleConfigsInput'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNotebookInstanceLifecycleConfigsOutput'
  '/#ListNotebookInstances':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of the Amazon SageMaker notebook instances in the requester''s account in an AWS Region. '
      operationId: ListNotebookInstances
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListNotebookInstancesInput'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNotebookInstancesOutput'
  '/#ListTags':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns the tags for the specified Amazon SageMaker resource.
      operationId: ListTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsInput'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsOutput'
  '/#ListTrainingJobs':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists training jobs.
      operationId: ListTrainingJobs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTrainingJobsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTrainingJobsResponse'
  '/#StartNotebookInstance':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Launches an ML compute instance with the latest version of the libraries and attaches your ML storage volume. After configuring the notebook instance, Amazon SageMaker sets the notebook instance status to <code>InService</code>. A notebook instance''s status must be <code>InService</code> before you can connect to your Jupyter notebook. '
      operationId: StartNotebookInstance
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartNotebookInstanceInput'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
  '/#StopNotebookInstance':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Terminates the ML compute instance. Before terminating the instance, Amazon SageMaker disconnects the ML storage volume from it. Amazon SageMaker preserves the ML storage volume. </p> <p>To access data on the ML storage volume for a notebook instance that has been terminated, call the <code>StartNotebookInstance</code> API. <code>StartNotebookInstance</code> launches another ML compute instance, configures it, and attaches the preserved ML storage volume so you can continue your work. </p>'
      operationId: StopNotebookInstance
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopNotebookInstanceInput'
      responses:
        '200':
          description: Success
  '/#StopTrainingJob':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Stops a training job. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of the training is not lost. </p> <p>Training algorithms provided by Amazon SageMaker save the intermediate results of a model training job. This intermediate data is a valid model artifact. You can use the model artifacts that are saved when Amazon SageMaker stops a training job to create a model. </p> <p>When it receives a <code>StopTrainingJob</code> request, Amazon SageMaker changes the status of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the status to <code>Stopped</code>.</p>'
      operationId: StopTrainingJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopTrainingJobRequest'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
  '/#UpdateEndpoint':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p> Deploys the new <code>EndpointConfig</code> specified in the request, switches to using newly created endpoint, and then deletes resources provisioned for the endpoint using the previous <code>EndpointConfig</code> (there is no availability loss). </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a> API. </p>'
      operationId: UpdateEndpoint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEndpointInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEndpointOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
  '/#UpdateEndpointWeightsAndCapacities':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Updates variant weight of one or more variants associated with an existing endpoint, or capacity of one variant associated with an existing endpoint. When it receives the request, Amazon SageMaker sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a> API. '
      operationId: UpdateEndpointWeightsAndCapacities
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEndpointWeightsAndCapacitiesInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEndpointWeightsAndCapacitiesOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
  '/#UpdateNotebookInstance':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a notebook instance. NotebookInstance updates include upgrading or downgrading the ML compute instance used for your notebook instance to accommodate changes in your workload requirements. You can also update the VPC security groups.
      operationId: UpdateNotebookInstance
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateNotebookInstanceInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNotebookInstanceOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
  '/#UpdateNotebookInstanceLifecycleConfig':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a notebook instance lifecycle configuration created with the API.
      operationId: UpdateNotebookInstanceLifecycleConfig
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateNotebookInstanceLifecycleConfigInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNotebookInstanceLifecycleConfigOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
definitions:
  AddTagsInput:
    properties:
      ResourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the resource that you want to tag.
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of <code>Tag</code> objects. Each tag is a key-value pair. Only the <code>key</code> parameter is required. If you don''t specify a value, Amazon SageMaker sets the value to an empty string. '
    required:
      - ResourceArn
      - Tags
    type: object
  AddTagsOutput:
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: A list of tags associated with the Amazon SageMaker resource.
    type: object
  AlgorithmImage:
    maxLength: 255
    type: string
  AlgorithmSpecification:
    description: '<p>Specifies the training algorithm to use in a <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateTrainingJob.html">CreateTrainingJob</a> request. </p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about using your own algorithms, see <a>your-algorithms</a>. </p>'
    properties:
      TrainingImage:
        $ref: '#/definitions/AlgorithmImage'
        description: 'The registry path of the Docker image that contains the training algorithm. For information about docker registry paths for built-in algorithms, see <a>sagemaker-algo-docker-registry-paths</a>.'
      TrainingInputMode:
        $ref: '#/definitions/TrainingInputMode'
        description: '<p>The input mode that the algorithm supports. For the input modes that Amazon SageMaker algorithms support, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container. </p> <p> In File mode, make sure you provision ML storage volume with sufficient capacity to accommodate the data download from S3. In addition to the training data, the ML storage volume also stores the output model. The algorithm container use ML storage volume to also store intermediate information, if any. </p> <p> For distributed algorithms using File mode, training data is distributed uniformly, and your training duration is predictable if the input data objects size is approximately same. Amazon SageMaker does not split the files any further for model training. If the object sizes are skewed, training won''t be optimal as the data distribution is also skewed where one host in a training cluster is overloaded, thus becoming bottleneck in training. </p>'
    required:
      - TrainingImage
      - TrainingInputMode
    type: object
  Channel:
    description: 'A channel is a named input source that training algorithms can consume. '
    properties:
      ChannelName:
        $ref: '#/definitions/ChannelName'
        description: 'The name of the channel. '
      CompressionType:
        $ref: '#/definitions/CompressionType'
        description: 'If training data is compressed, the compression type. The default value is <code>None</code>. <code>CompressionType</code> is used only in PIPE input mode. In FILE mode, leave this field unset or set it to None.'
      ContentType:
        $ref: '#/definitions/ContentType'
        description: The MIME type of the data.
      DataSource:
        $ref: '#/definitions/DataSource'
        description: The location of the channel data.
      RecordWrapperType:
        $ref: '#/definitions/RecordWrapper'
        description: '<p/> <p>Specify RecordIO as the value when input data is in raw format but the training algorithm requires the RecordIO format, in which caseAmazon SageMaker wraps each individual S3 object in a RecordIO record. If the input data is already in RecordIO format, you don''t need to set this attribute. For more information, see <a href="https://mxnet.incubator.apache.org/how_to/recordio.html?highlight=im2rec">Create a Dataset Using RecordIO</a>. </p> <p>In FILE mode, leave this field unset or set it to None.</p> <p/>'
    required:
      - ChannelName
      - DataSource
    type: object
  ChannelName:
    maxLength: 64
    minLength: 1
    pattern: '[A-Za-z0-9\.\-_]+'
    type: string
  CompressionType:
    enum:
      - None
      - Gzip
    type: string
  ContainerDefinition:
    description: 'Describes the container, as part of model definition.'
    properties:
      ContainerHostname:
        $ref: '#/definitions/ContainerHostname'
        description: The DNS host name for the container after Amazon SageMaker deploys it.
      Environment:
        $ref: '#/definitions/EnvironmentMap'
        description: 'The environment variables to set in the Docker container. Each key and value in the <code>Environment</code> string to string map can have length of up to 1024. We support up to 16 entries in the map. '
      Image:
        $ref: '#/definitions/Image'
        description: 'The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored. If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a> '
      ModelDataUrl:
        $ref: '#/definitions/Url'
        description: 'The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix). '
    required:
      - Image
    type: object
  ContainerHostname:
    maxLength: 63
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    type: string
  ContentType:
    maxLength: 256
    type: string
  CreateEndpointConfigInput:
    properties:
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: 'The name of the endpoint configuration. You specify this name in a <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html">CreateEndpoint</a> request. '
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
      ProductionVariants:
        $ref: '#/definitions/ProductionVariantList'
        description: 'An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.'
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key-value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. '
    required:
      - EndpointConfigName
      - ProductionVariants
    type: object
  CreateEndpointConfigOutput:
    properties:
      EndpointConfigArn:
        $ref: '#/definitions/EndpointConfigArn'
        description: 'The Amazon Resource Name (ARN) of the endpoint configuration. '
    required:
      - EndpointConfigArn
    type: object
  CreateEndpointInput:
    properties:
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: 'The name of an endpoint configuration. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html">CreateEndpointConfig</a>. '
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of the endpoint. The name must be unique within an AWS Region in your AWS account.
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key-value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a>in the <i>AWS Billing and Cost Management User Guide</i>. '
    required:
      - EndpointName
      - EndpointConfigName
    type: object
  CreateEndpointOutput:
    properties:
      EndpointArn:
        $ref: '#/definitions/EndpointArn'
        description: The Amazon Resource Name (ARN) of the endpoint.
    required:
      - EndpointArn
    type: object
  CreateModelInput:
    properties:
      ExecutionRoleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances. Deploying on ML compute instances is part of model hosting. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. '
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the new model.
      PrimaryContainer:
        $ref: '#/definitions/ContainerDefinition'
        description: 'The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed into production. '
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key-value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. '
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'A object that specifies the VPC that you want your model to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a>host-vpc</a>.'
    required:
      - ModelName
      - PrimaryContainer
      - ExecutionRoleArn
    type: object
  CreateModelOutput:
    properties:
      ModelArn:
        $ref: '#/definitions/ModelArn'
        description: The ARN of the model created in Amazon SageMaker.
    required:
      - ModelArn
    type: object
  CreateNotebookInstanceInput:
    properties:
      DirectInternetAccess:
        $ref: '#/definitions/DirectInternetAccess'
        description: '<p>Sets whether Amazon SageMaker provides internet access to the notebook instance. If you set this to <code>Disabled</code> this notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.</p> <p>For more information, see <a>appendix-notebook-and-internet-access</a>. You can set the value of this parameter to <code>Disabled</code> only if you set a value for the <code>SubnetId</code> parameter.</p>'
      InstanceType:
        $ref: '#/definitions/InstanceType'
        description: The type of ML compute instance to launch for the notebook instance.
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: ' If you provide a AWS KMS key ID, Amazon SageMaker uses it to encrypt data at rest on the ML storage volume that is attached to your notebook instance. '
      LifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: 'The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see <a>notebook-lifecycle-config</a>.'
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the new notebook instance.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: ' When you send any requests to AWS resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. '
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: 'The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet. '
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: 'The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance. '
      Tags:
        $ref: '#/definitions/TagList'
        description: A list of tags to associate with the notebook instance. You can add tags later by using the <code>CreateTags</code> API.
    required:
      - NotebookInstanceName
      - InstanceType
      - RoleArn
    type: object
  CreateNotebookInstanceLifecycleConfigInput:
    properties:
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration.
      OnCreate:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'A shell script that runs only once, when you create a notebook instance.'
      OnStart:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'A shell script that runs every time you start a notebook instance, including when you create the notebook instance.'
    required:
      - NotebookInstanceLifecycleConfigName
    type: object
  CreateNotebookInstanceLifecycleConfigOutput:
    properties:
      NotebookInstanceLifecycleConfigArn:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigArn'
        description: The Amazon Resource Name (ARN) of the lifecycle configuration.
    type: object
  CreateNotebookInstanceOutput:
    properties:
      NotebookInstanceArn:
        $ref: '#/definitions/NotebookInstanceArn'
        description: 'The Amazon Resource Name (ARN) of the notebook instance. '
    type: object
  CreatePresignedNotebookInstanceUrlInput:
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance.
      SessionExpirationDurationInSeconds:
        $ref: '#/definitions/SessionExpirationDurationInSeconds'
        description: 'The duration of the session, in seconds. The default is 12 hours.'
    required:
      - NotebookInstanceName
    type: object
  CreatePresignedNotebookInstanceUrlOutput:
    properties:
      AuthorizedUrl:
        $ref: '#/definitions/NotebookInstanceUrl'
        description: 'A JSON object that contains the URL string. '
    type: object
  CreateTrainingJobRequest:
    properties:
      AlgorithmSpecification:
        $ref: '#/definitions/AlgorithmSpecification'
        description: 'The registry path of the Docker image that contains the training algorithm and algorithm-specific metadata, including the input mode. For more information about algorithms provided by Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about providing your own algorithms, see <a>your-algorithms</a>. '
      HyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: '<p>Algorithm-specific parameters. You set hyperparameters before you start the learning process. Hyperparameters influence the quality of the model. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p> <p>You can specify a maximum of 100 hyperparameters. Each hyperparameter is a key-value pair. Each key and value is limited to 256 characters, as specified by the <code>Length Constraint</code>. </p>'
      InputDataConfig:
        $ref: '#/definitions/InputDataConfig'
        description: '<p>An array of <code>Channel</code> objects. Each channel is a named input source. <code>InputDataConfig</code> describes the input data and its location. </p> <p>Algorithms can accept input data from one or more channels. For example, an algorithm might have two channels of input data, <code>training_data</code> and <code>validation_data</code>. The configuration for each channel provides the S3 location where the input data is stored. It also provides information about the stored data: the MIME type, compression method, and whether the data is wrapped in RecordIO format. </p> <p>Depending on the input mode that the algorithm supports, Amazon SageMaker either copies input data files from an S3 bucket to a local directory in the Docker container, or makes it available as input streams. </p>'
      OutputDataConfig:
        $ref: '#/definitions/OutputDataConfig'
        description: 'Specifies the path to the S3 bucket where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts. '
      ResourceConfig:
        $ref: '#/definitions/ResourceConfig'
        description: '<p>The resources, including the ML compute instances and ML storage volumes, to use for model training. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use ML storage volumes for scratch space. If you want Amazon SageMaker to use the ML storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>'
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: '<p>The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. </p> <p>During model training, Amazon SageMaker needs your permission to read input data from an S3 bucket, download a Docker image that contains training code, write model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and publish metrics to Amazon CloudWatch. You grant permissions for all of these tasks to an IAM role. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p>'
      StoppingCondition:
        $ref: '#/definitions/StoppingCondition'
        description: '<p>Sets a duration for training. Use this parameter to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts. </p> <p>When Amazon SageMaker terminates a job because the stopping condition has been met, training algorithms provided by Amazon SageMaker save the intermediate results of the job. This intermediate data is a valid model artifact. You can use it to create a model using the <code>CreateModel</code> API. </p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key-value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. '
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: 'The name of the training job. The name must be unique within an AWS Region in an AWS account. It appears in the Amazon SageMaker console. '
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'A object that specifies the VPC that you want your training job to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a>train-vpc</a> '
    required:
      - TrainingJobName
      - AlgorithmSpecification
      - RoleArn
      - InputDataConfig
      - OutputDataConfig
      - ResourceConfig
      - StoppingCondition
    type: object
  CreateTrainingJobResponse:
    properties:
      TrainingJobArn:
        $ref: '#/definitions/TrainingJobArn'
        description: The Amazon Resource Name (ARN) of the training job.
    required:
      - TrainingJobArn
    type: object
  CreationTime:
    format: date-time
    type: string
  DataSource:
    description: Describes the location of the channel data.
    properties:
      S3DataSource:
        $ref: '#/definitions/S3DataSource'
        description: The S3 location of the data source that is associated with a channel.
    required:
      - S3DataSource
    type: object
  DeleteEndpointConfigInput:
    properties:
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: The name of the endpoint configuration that you want to delete.
    required:
      - EndpointConfigName
    type: object
  DeleteEndpointInput:
    properties:
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of the endpoint that you want to delete.
    required:
      - EndpointName
    type: object
  DeleteModelInput:
    properties:
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the model to delete.
    required:
      - ModelName
    type: object
  DeleteNotebookInstanceInput:
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the Amazon SageMaker notebook instance to delete.
    required:
      - NotebookInstanceName
    type: object
  DeleteNotebookInstanceLifecycleConfigInput:
    properties:
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration to delete.
    required:
      - NotebookInstanceLifecycleConfigName
    type: object
  DeleteTagsInput:
    properties:
      ResourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the resource whose tags you want to delete.
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: An array or one or more tag keys to delete.
    required:
      - ResourceArn
      - TagKeys
    type: object
  DeleteTagsOutput:
    properties: {}
    type: object
  DescribeEndpointConfigInput:
    properties:
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: The name of the endpoint configuration.
    required:
      - EndpointConfigName
    type: object
  DescribeEndpointConfigOutput:
    properties:
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint configuration was created.
      EndpointConfigArn:
        $ref: '#/definitions/EndpointConfigArn'
        description: The Amazon Resource Name (ARN) of the endpoint configuration.
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: Name of the Amazon SageMaker endpoint configuration.
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: AWS KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance.
      ProductionVariants:
        $ref: '#/definitions/ProductionVariantList'
        description: 'An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.'
    required:
      - EndpointConfigName
      - EndpointConfigArn
      - ProductionVariants
      - CreationTime
    type: object
  DescribeEndpointInput:
    properties:
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of the endpoint.
    required:
      - EndpointName
    type: object
  DescribeEndpointOutput:
    properties:
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint was created.
      EndpointArn:
        $ref: '#/definitions/EndpointArn'
        description: The Amazon Resource Name (ARN) of the endpoint.
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: The name of the endpoint configuration associated with this endpoint.
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: Name of the endpoint.
      EndpointStatus:
        $ref: '#/definitions/EndpointStatus'
        description: The status of the endpoint.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the status of the endpoint is <code>Failed</code>, the reason why it failed. '
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint was last modified.
      ProductionVariants:
        $ref: '#/definitions/ProductionVariantSummaryList'
        description: ' An array of ProductionVariant objects, one for each model hosted behind this endpoint. '
    required:
      - EndpointName
      - EndpointArn
      - EndpointConfigName
      - EndpointStatus
      - CreationTime
      - LastModifiedTime
    type: object
  DescribeModelInput:
    properties:
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the model.
    required:
      - ModelName
    type: object
  DescribeModelOutput:
    properties:
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the model was created.
      ExecutionRoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role that you specified for the model.
      ModelArn:
        $ref: '#/definitions/ModelArn'
        description: The Amazon Resource Name (ARN) of the model.
      ModelName:
        $ref: '#/definitions/ModelName'
        description: Name of the Amazon SageMaker model.
      PrimaryContainer:
        $ref: '#/definitions/ContainerDefinition'
        description: 'The location of the primary inference code, associated artifacts, and custom environment map that the inference code uses when it is deployed in production. '
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'A object that specifies the VPC that this model has access to. For more information, see <a>host-vpc</a> '
    required:
      - ModelName
      - PrimaryContainer
      - ExecutionRoleArn
      - CreationTime
      - ModelArn
    type: object
  DescribeNotebookInstanceInput:
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance that you want information about.
    required:
      - NotebookInstanceName
    type: object
  DescribeNotebookInstanceLifecycleConfigInput:
    properties:
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration to describe.
    required:
      - NotebookInstanceLifecycleConfigName
    type: object
  DescribeNotebookInstanceLifecycleConfigOutput:
    properties:
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp that tells when the lifecycle configuration was created.
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: A timestamp that tells when the lifecycle configuration was last modified.
      NotebookInstanceLifecycleConfigArn:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigArn'
        description: The Amazon Resource Name (ARN) of the lifecycle configuration.
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration.
      OnCreate:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'The shell script that runs only once, when you create a notebook instance.'
      OnStart:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'The shell script that runs every time you start a notebook instance, including when you create the notebook instance.'
    type: object
  DescribeNotebookInstanceOutput:
    properties:
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp. Use this parameter to return the time when the notebook instance was created
      DirectInternetAccess:
        $ref: '#/definitions/DirectInternetAccess'
        description: '<p>Describes whether Amazon SageMaker provides internet access to the notebook instance. If this value is set to <i>Disabled, he notebook instance does not have internet access, and cannot connect to Amazon SageMaker training and endpoint services</i>.</p> <p>For more information, see <a>appendix-notebook-and-internet-access</a>.</p>'
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If status is failed, the reason it failed.'
      InstanceType:
        $ref: '#/definitions/InstanceType'
        description: The type of ML compute instance running on the notebook instance.
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: ' AWS KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance. '
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: 'A timestamp. Use this parameter to retrieve the time when the notebook instance was last modified. '
      NetworkInterfaceId:
        $ref: '#/definitions/NetworkInterfaceId'
        description: ' Network interface IDs that Amazon SageMaker created at the time of creating the instance. '
      NotebookInstanceArn:
        $ref: '#/definitions/NotebookInstanceArn'
        description: The Amazon Resource Name (ARN) of the notebook instance.
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: '<p>Returns the name of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>'
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: ' Name of the Amazon SageMaker notebook instance. '
      NotebookInstanceStatus:
        $ref: '#/definitions/NotebookInstanceStatus'
        description: The status of the notebook instance.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: ' Amazon Resource Name (ARN) of the IAM role associated with the instance. '
      SecurityGroups:
        $ref: '#/definitions/SecurityGroupIds'
        description: The IDs of the VPC security groups.
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: The ID of the VPC subnet.
      Url:
        $ref: '#/definitions/NotebookInstanceUrl'
        description: 'The URL that you use to connect to the Jupyter notebook that is running in your notebook instance. '
    type: object
  DescribeTrainingJobRequest:
    properties:
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: The name of the training job.
    required:
      - TrainingJobName
    type: object
  DescribeTrainingJobResponse:
    properties:
      AlgorithmSpecification:
        $ref: '#/definitions/AlgorithmSpecification'
        description: 'Information about the algorithm used for training, and algorithm metadata. '
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that indicates when the training job was created.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the training job failed, the reason it failed. '
      HyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: 'Algorithm-specific parameters. '
      InputDataConfig:
        $ref: '#/definitions/InputDataConfig'
        description: 'An array of <code>Channel</code> objects that describes each data input channel. '
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that indicates when the status of the training job was last modified.
      ModelArtifacts:
        $ref: '#/definitions/ModelArtifacts'
        description: 'Information about the Amazon S3 location that is configured for storing model artifacts. '
      OutputDataConfig:
        $ref: '#/definitions/OutputDataConfig'
        description: 'The S3 path where model artifacts that you configured when creating the job are stored. Amazon SageMaker creates subfolders for model artifacts. '
      ResourceConfig:
        $ref: '#/definitions/ResourceConfig'
        description: 'Resources, including ML compute instances and ML storage volumes, that are configured for model training. '
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The AWS Identity and Access Management (IAM) role configured for the training job. '
      SecondaryStatus:
        $ref: '#/definitions/SecondaryStatus'
        description: ' Provides granular information about the system state. For more information, see <code>TrainingJobStatus</code>. '
      StoppingCondition:
        $ref: '#/definitions/StoppingCondition'
        description: 'The condition under which to stop the training job. '
      TrainingEndTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that indicates when model training ended.
      TrainingJobArn:
        $ref: '#/definitions/TrainingJobArn'
        description: The Amazon Resource Name (ARN) of the training job.
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: ' Name of the model training job. '
      TrainingJobStatus:
        $ref: '#/definitions/TrainingJobStatus'
        description: '<p>The status of the training job. </p> <p>For the <code>InProgress</code> status, Amazon SageMaker can return these secondary statuses:</p> <ul> <li> <p>Starting - Preparing for training.</p> </li> <li> <p>Downloading - Optional stage for algorithms that support File training input mode. It indicates data is being downloaded to ML storage volumes.</p> </li> <li> <p>Training - Training is in progress.</p> </li> <li> <p>Uploading - Training is complete and model upload is in progress.</p> </li> </ul> <p>For the <code>Stopped</code> training status, Amazon SageMaker can return these secondary statuses:</p> <ul> <li> <p>MaxRuntimeExceeded - Job stopped as a result of maximum allowed runtime exceeded.</p> </li> </ul>'
      TrainingStartTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that indicates when training started.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'A object that specifies the VPC that this training job has access to. For more information, see <a>train-vpc</a>.'
    required:
      - TrainingJobName
      - TrainingJobArn
      - ModelArtifacts
      - TrainingJobStatus
      - SecondaryStatus
      - AlgorithmSpecification
      - InputDataConfig
      - ResourceConfig
      - StoppingCondition
      - CreationTime
    type: object
  DesiredWeightAndCapacity:
    description: Specifies weight and capacity values for a production variant.
    properties:
      DesiredInstanceCount:
        $ref: '#/definitions/TaskCount'
        description: The variant's capacity.
      DesiredWeight:
        $ref: '#/definitions/VariantWeight'
        description: The variant's weight.
      VariantName:
        $ref: '#/definitions/VariantName'
        description: The name of the variant to update.
    required:
      - VariantName
    type: object
  DesiredWeightAndCapacityList:
    items:
      $ref: '#/definitions/DesiredWeightAndCapacity'
    minItems: 1
    type: array
  DirectInternetAccess:
    enum:
      - Enabled
      - Disabled
    type: string
  EndpointArn:
    maxLength: 2048
    minLength: 20
    type: string
  EndpointConfigArn:
    maxLength: 2048
    minLength: 20
    type: string
  EndpointConfigName:
    maxLength: 63
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    type: string
  EndpointConfigNameContains:
    pattern: '[a-zA-Z0-9-]+'
    type: string
  EndpointConfigSortKey:
    enum:
      - Name
      - CreationTime
    type: string
  EndpointConfigSummary:
    description: Provides summary information for an endpoint configuration.
    properties:
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint configuration was created.
      EndpointConfigArn:
        $ref: '#/definitions/EndpointConfigArn'
        description: The Amazon Resource Name (ARN) of the endpoint configuration.
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: The name of the endpoint configuration.
    required:
      - EndpointConfigName
      - EndpointConfigArn
      - CreationTime
    type: object
  EndpointConfigSummaryList:
    items:
      $ref: '#/definitions/EndpointConfigSummary'
    type: array
  EndpointName:
    maxLength: 63
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    type: string
  EndpointNameContains:
    pattern: '[a-zA-Z0-9-]+'
    type: string
  EndpointSortKey:
    enum:
      - Name
      - CreationTime
      - Status
    type: string
  EndpointStatus:
    enum:
      - OutOfService
      - Creating
      - Updating
      - RollingBack
      - InService
      - Deleting
      - Failed
    type: string
  EndpointSummary:
    description: Provides summary information for an endpoint.
    properties:
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint was created.
      EndpointArn:
        $ref: '#/definitions/EndpointArn'
        description: The Amazon Resource Name (ARN) of the endpoint.
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of the endpoint.
      EndpointStatus:
        $ref: '#/definitions/EndpointStatus'
        description: The status of the endpoint.
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint was last modified.
    required:
      - EndpointName
      - EndpointArn
      - CreationTime
      - LastModifiedTime
      - EndpointStatus
    type: object
  EndpointSummaryList:
    items:
      $ref: '#/definitions/EndpointSummary'
    type: array
  EnvironmentKey:
    maxLength: 1024
    pattern: '[a-zA-Z_][a-zA-Z0-9_]*'
    type: string
  EnvironmentMap:
    items:
      properties:
        key:
          $ref: '#/definitions/EnvironmentKey'
        value:
          $ref: '#/definitions/EnvironmentValue'
      type: object
    maxItems: 16
    type: array
  EnvironmentValue:
    maxLength: 1024
    type: string
  FailureReason:
    maxLength: 1024
    type: string
  HyperParameters:
    items:
      properties:
        key:
          $ref: '#/definitions/ParameterKey'
        value:
          $ref: '#/definitions/ParameterValue'
      type: object
    maxItems: 100
    minItems: 0
    type: array
  Image:
    maxLength: 255
    pattern: '[\S]+'
    type: string
  InputDataConfig:
    items:
      $ref: '#/definitions/Channel'
    maxItems: 8
    minItems: 1
    type: array
  InstanceType:
    enum:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.p2.xlarge
      - ml.p2.8xlarge
      - ml.p2.16xlarge
      - ml.p3.2xlarge
      - ml.p3.8xlarge
      - ml.p3.16xlarge
    type: string
  KmsKeyId:
    maxLength: 2048
    type: string
  LastModifiedTime:
    format: date-time
    type: string
  ListEndpointConfigsInput:
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only endpoint configurations created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only endpoint configurations created before the specified time (timestamp).
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of training jobs to return in the response.
      NameContains:
        $ref: '#/definitions/EndpointConfigNameContains'
        description: 'A string in the endpoint configuration name. This filter returns only endpoint configurations whose name contains the specified string. '
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the result of the previous <code>ListEndpointConfig</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoint configurations, use the token in the next request. '
      SortBy:
        $ref: '#/definitions/EndpointConfigSortKey'
        description: The field to sort results by. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/OrderKey'
        description: The sort order for results. The default is <code>Ascending</code>.
    type: object
  ListEndpointConfigsOutput:
    properties:
      EndpointConfigs:
        $ref: '#/definitions/EndpointConfigSummaryList'
        description: An array of endpoint configurations.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of endpoint configurations, use it in the subsequent request '
    required:
      - EndpointConfigs
    type: object
  ListEndpointsInput:
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only endpoints that were created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only endpoints that were created before the specified time (timestamp).
      LastModifiedTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: ' A filter that returns only endpoints that were modified after the specified timestamp. '
      LastModifiedTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: ' A filter that returns only endpoints that were modified before the specified timestamp. '
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of endpoints to return in the response.
      NameContains:
        $ref: '#/definitions/EndpointNameContains'
        description: A string in endpoint names. This filter returns only endpoints whose name contains the specified string.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the result of a <code>ListEndpoints</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoints, use the token in the next request.'
      SortBy:
        $ref: '#/definitions/EndpointSortKey'
        description: Sorts the list of results. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/OrderKey'
        description: The sort order for results. The default is <code>Ascending</code>.
      StatusEquals:
        $ref: '#/definitions/EndpointStatus'
        description: ' A filter that returns only endpoints with the specified status. '
    type: object
  ListEndpointsOutput:
    properties:
      Endpoints:
        $ref: '#/definitions/EndpointSummaryList'
        description: ' An array or endpoint objects. '
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request. '
    required:
      - Endpoints
    type: object
  ListModelsInput:
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only models created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only models created before the specified time (timestamp).
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of models to return in the response.
      NameContains:
        $ref: '#/definitions/ModelNameContains'
        description: A string in the training job name. This filter returns only models in the training job whose name contains the specified string.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request.'
      SortBy:
        $ref: '#/definitions/ModelSortKey'
        description: Sorts the list of results. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/OrderKey'
        description: The sort order for results. The default is <code>Ascending</code>.
    type: object
  ListModelsOutput:
    properties:
      Models:
        $ref: '#/definitions/ModelSummaryList'
        description: 'An array of <code>ModelSummary</code> objects, each of which lists a model.'
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of models, use it in the subsequent request. '
    required:
      - Models
    type: object
  ListNotebookInstanceLifecycleConfigsInput:
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only lifecycle configurations that were created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only lifecycle configurations that were created before the specified time (timestamp).
      LastModifiedTimeAfter:
        $ref: '#/definitions/LastModifiedTime'
        description: A filter that returns only lifecycle configurations that were modified after the specified time (timestamp).
      LastModifiedTimeBefore:
        $ref: '#/definitions/LastModifiedTime'
        description: A filter that returns only lifecycle configurations that were modified before the specified time (timestamp).
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of lifecycle configurations to return in the response.
      NameContains:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigNameContains'
        description: A string in the lifecycle configuration name. This filter returns only lifecycle configurations whose name contains the specified string.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of a <code>ListNotebookInstanceLifecycleConfigs</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of lifecycle configurations, use the token in the next request.'
      SortBy:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigSortKey'
        description: Sorts the list of results. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigSortOrder'
        description: The sort order for results.
    type: object
  ListNotebookInstanceLifecycleConfigsOutput:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To get the next set of lifecycle configurations, use it in the next request. '
      NotebookInstanceLifecycleConfigs:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigSummaryList'
        description: 'An array of <code>NotebookInstanceLifecycleConfiguration</code> objects, each listing a lifecycle configuration.'
    type: object
  ListNotebookInstancesInput:
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only notebook instances that were created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/CreationTime'
        description: 'A filter that returns only notebook instances that were created before the specified time (timestamp). '
      LastModifiedTimeAfter:
        $ref: '#/definitions/LastModifiedTime'
        description: A filter that returns only notebook instances that were modified after the specified time (timestamp).
      LastModifiedTimeBefore:
        $ref: '#/definitions/LastModifiedTime'
        description: A filter that returns only notebook instances that were modified before the specified time (timestamp).
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of notebook instances to return.
      NameContains:
        $ref: '#/definitions/NotebookInstanceNameContains'
        description: A string in the notebook instances' name. This filter returns only notebook instances whose name contains the specified string.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: '<p> If the previous call to the <code>ListNotebookInstances</code> is truncated, the response includes a <code>NextToken</code>. You can use this token in your subsequent <code>ListNotebookInstances</code> request to fetch the next set of notebook instances. </p> <note> <p> You might specify a filter or a sort order in your request. When response is truncated, you must use the same values for the filer and sort order in the next request. </p> </note>'
      NotebookInstanceLifecycleConfigNameContains:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: A string in the name of a notebook instances lifecycle configuration associated with this notebook instance. This filter returns only notebook instances associated with a lifecycle configuration with a name that contains the specified string.
      SortBy:
        $ref: '#/definitions/NotebookInstanceSortKey'
        description: The field to sort results by. The default is <code>Name</code>.
      SortOrder:
        $ref: '#/definitions/NotebookInstanceSortOrder'
        description: 'The sort order for results. '
      StatusEquals:
        $ref: '#/definitions/NotebookInstanceStatus'
        description: A filter that returns only notebook instances with the specified status.
    type: object
  ListNotebookInstancesOutput:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response to the previous <code>ListNotebookInstances</code> request was truncated, Amazon SageMaker returns this token. To retrieve the next set of notebook instances, use the token in the next request.'
      NotebookInstances:
        $ref: '#/definitions/NotebookInstanceSummaryList'
        description: 'An array of <code>NotebookInstanceSummary</code> objects, one for each notebook instance.'
    type: object
  ListTagsInput:
    properties:
      MaxResults:
        $ref: '#/definitions/ListTagsMaxResults'
        description: Maximum number of tags to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' If the response to the previous <code>ListTags</code> request is truncated, Amazon SageMaker returns this token. To retrieve the next set of tags, use it in the subsequent request. '
      ResourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.
    required:
      - ResourceArn
    type: object
  ListTagsMaxResults:
    minimum: 50
    type: integer
  ListTagsOutput:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' If response is truncated, Amazon SageMaker includes a token in the response. You can use this token in your subsequent request to fetch next set of tokens. '
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of <code>Tag</code> objects, each with a tag key and a value.'
    type: object
  ListTrainingJobsRequest:
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that only training jobs created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only training jobs created before the specified time (timestamp).
      LastModifiedTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only training jobs modified after the specified time (timestamp).
      LastModifiedTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only training jobs modified before the specified time (timestamp).
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of training jobs to return in the response.
      NameContains:
        $ref: '#/definitions/NameContains'
        description: A string in the training job name. This filter returns only models whose name contains the specified string.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>ListTrainingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request. '
      SortBy:
        $ref: '#/definitions/SortBy'
        description: The field to sort results by. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for results. The default is <code>Ascending</code>.
      StatusEquals:
        $ref: '#/definitions/TrainingJobStatus'
        description: A filter that retrieves only training jobs with a specific status.
    type: object
  ListTrainingJobsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request.'
      TrainingJobSummaries:
        $ref: '#/definitions/TrainingJobSummaries'
        description: 'An array of <code>TrainingJobSummary</code> objects, each listing a training job.'
    required:
      - TrainingJobSummaries
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  MaxRuntimeInSeconds:
    minimum: 1
    type: integer
  ModelArn:
    maxLength: 2048
    minLength: 20
    type: string
  ModelArtifacts:
    description: 'Provides information about the location that is configured for storing model artifacts. '
    properties:
      S3ModelArtifacts:
        $ref: '#/definitions/S3Uri'
        description: 'The path of the S3 object that contains the model artifacts. For example, <code>s3://bucket-name/keynameprefix/model.tar.gz</code>.'
    required:
      - S3ModelArtifacts
    type: object
  ModelName:
    maxLength: 63
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    type: string
  ModelNameContains:
    pattern: '[a-zA-Z0-9-]+'
    type: string
  ModelSortKey:
    enum:
      - Name
      - CreationTime
    type: string
  ModelSummary:
    description: Provides summary information about a model.
    properties:
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that indicates when the model was created.
      ModelArn:
        $ref: '#/definitions/ModelArn'
        description: The Amazon Resource Name (ARN) of the model.
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the model that you want a summary for.
    required:
      - ModelName
      - ModelArn
      - CreationTime
    type: object
  ModelSummaryList:
    items:
      $ref: '#/definitions/ModelSummary'
    type: array
  NameContains:
    maxLength: 63
    pattern: '[a-zA-Z0-9\-]+'
    type: string
  NetworkInterfaceId:
    type: string
  NextToken:
    maxLength: 8192
    type: string
  NotebookInstanceArn:
    maxLength: 256
    type: string
  NotebookInstanceLifecycleConfigArn:
    maxLength: 256
    type: string
  NotebookInstanceLifecycleConfigContent:
    maxLength: 16384
    minLength: 1
    type: string
  NotebookInstanceLifecycleConfigList:
    items:
      $ref: '#/definitions/NotebookInstanceLifecycleHook'
    maxItems: 1
    type: array
  NotebookInstanceLifecycleConfigName:
    maxLength: 63
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    type: string
  NotebookInstanceLifecycleConfigNameContains:
    pattern: '[a-zA-Z0-9-]+'
    type: string
  NotebookInstanceLifecycleConfigSortKey:
    enum:
      - Name
      - CreationTime
      - LastModifiedTime
    type: string
  NotebookInstanceLifecycleConfigSortOrder:
    enum:
      - Ascending
      - Descending
    type: string
  NotebookInstanceLifecycleConfigSummary:
    description: Provides a summary of a notebook instance lifecycle configuration.
    properties:
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp that tells when the lifecycle configuration was created.
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: A timestamp that tells when the lifecycle configuration was last modified.
      NotebookInstanceLifecycleConfigArn:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigArn'
        description: The Amazon Resource Name (ARN) of the lifecycle configuration.
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration.
    required:
      - NotebookInstanceLifecycleConfigName
      - NotebookInstanceLifecycleConfigArn
    type: object
  NotebookInstanceLifecycleConfigSummaryList:
    items:
      $ref: '#/definitions/NotebookInstanceLifecycleConfigSummary'
    type: array
  NotebookInstanceLifecycleHook:
    description: '<p>Contains the notebook instance lifecycle configuration script.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>'
    properties:
      Content:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigContent'
        description: A base64-encoded string that contains a shell script for a notebook instance lifecycle configuration.
    type: object
  NotebookInstanceName:
    maxLength: 63
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    type: string
  NotebookInstanceNameContains:
    pattern: '[a-zA-Z0-9-]+'
    type: string
  NotebookInstanceSortKey:
    enum:
      - Name
      - CreationTime
      - Status
    type: string
  NotebookInstanceSortOrder:
    enum:
      - Ascending
      - Descending
    type: string
  NotebookInstanceStatus:
    enum:
      - Pending
      - InService
      - Stopping
      - Stopped
      - Failed
      - Deleting
    type: string
  NotebookInstanceSummary:
    description: Provides summary information for an Amazon SageMaker notebook instance.
    properties:
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp that shows when the notebook instance was created.
      InstanceType:
        $ref: '#/definitions/InstanceType'
        description: The type of ML compute instance that the notebook instance is running on.
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: A timestamp that shows when the notebook instance was last modified.
      NotebookInstanceArn:
        $ref: '#/definitions/NotebookInstanceArn'
        description: The Amazon Resource Name (ARN) of the notebook instance.
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: '<p>The name of a notebook instance lifecycle configuration associated with this notebook instance.</p> <p>For information about notebook instance lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>'
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance that you want a summary for.
      NotebookInstanceStatus:
        $ref: '#/definitions/NotebookInstanceStatus'
        description: The status of the notebook instance.
      Url:
        $ref: '#/definitions/NotebookInstanceUrl'
        description: 'The URL that you use to connect to the Jupyter instance running in your notebook instance. '
    required:
      - NotebookInstanceName
      - NotebookInstanceArn
    type: object
  NotebookInstanceSummaryList:
    items:
      $ref: '#/definitions/NotebookInstanceSummary'
    type: array
  NotebookInstanceUrl:
    type: string
  OrderKey:
    enum:
      - Ascending
      - Descending
    type: string
  OutputDataConfig:
    description: Provides information about how to store model training results (model artifacts).
    properties:
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: '<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. </p> <note> <p>If the configuration of the output S3 bucket requires server-side encryption for objects, and you don''t provide the KMS key ID, Amazon SageMaker uses the default service key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in Amazon Simple Storage Service developer guide.</p> </note> <note> <p> The KMS key policy must grant permission to the IAM role you specify in your <code>CreateTrainingJob</code> request. <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Using Key Policies in AWS KMS</a> in the AWS Key Management Service Developer Guide. </p> </note>'
      S3OutputPath:
        $ref: '#/definitions/S3Uri'
        description: 'Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>. '
    required:
      - S3OutputPath
    type: object
  PaginationToken:
    maxLength: 8192
    type: string
  ParameterKey:
    maxLength: 256
    type: string
  ParameterValue:
    maxLength: 256
    type: string
  ProductionVariant:
    description: 'Identifies a model that you want to host and the resources to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights. '
    properties:
      InitialInstanceCount:
        $ref: '#/definitions/TaskCount'
        description: Number of instances to launch initially.
      InitialVariantWeight:
        $ref: '#/definitions/VariantWeight'
        description: 'Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. The traffic to a production variant is determined by the ratio of the <code>VariantWeight</code> to the sum of all <code>VariantWeight</code> values across all ProductionVariants. If unspecified, it defaults to 1.0. '
      InstanceType:
        $ref: '#/definitions/ProductionVariantInstanceType'
        description: The ML compute instance type.
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the model that you want to host. This is the name that you specified when creating the model.
      VariantName:
        $ref: '#/definitions/VariantName'
        description: The name of the production variant.
    required:
      - VariantName
      - ModelName
      - InitialInstanceCount
      - InstanceType
    type: object
  ProductionVariantInstanceType:
    enum:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.m5.large
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge
      - ml.c4.large
      - ml.c4.xlarge
      - ml.c4.2xlarge
      - ml.c4.4xlarge
      - ml.c4.8xlarge
      - ml.p2.xlarge
      - ml.p2.8xlarge
      - ml.p2.16xlarge
      - ml.p3.2xlarge
      - ml.p3.8xlarge
      - ml.p3.16xlarge
      - ml.c5.large
      - ml.c5.xlarge
      - ml.c5.2xlarge
      - ml.c5.4xlarge
      - ml.c5.9xlarge
      - ml.c5.18xlarge
    type: string
  ProductionVariantList:
    items:
      $ref: '#/definitions/ProductionVariant'
    minItems: 1
    type: array
  ProductionVariantSummary:
    description: 'Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the <code>UpdateEndpointWeightsAndCapacities</code> API and the endpoint status is <code>Updating</code>, you get different desired and current values. '
    properties:
      CurrentInstanceCount:
        $ref: '#/definitions/TaskCount'
        description: The number of instances associated with the variant.
      CurrentWeight:
        $ref: '#/definitions/VariantWeight'
        description: The weight associated with the variant.
      DesiredInstanceCount:
        $ref: '#/definitions/TaskCount'
        description: 'The number of instances requested in the <code>UpdateEndpointWeightsAndCapacities</code> request. '
      DesiredWeight:
        $ref: '#/definitions/VariantWeight'
        description: 'The requested weight, as specified in the <code>UpdateEndpointWeightsAndCapacities</code> request. '
      VariantName:
        $ref: '#/definitions/VariantName'
        description: The name of the variant.
    required:
      - VariantName
    type: object
  ProductionVariantSummaryList:
    items:
      $ref: '#/definitions/ProductionVariantSummary'
    minItems: 1
    type: array
  RecordWrapper:
    enum:
      - None
      - RecordIO
    type: string
  ResourceArn:
    maxLength: 256
    type: string
  ResourceConfig:
    description: 'Describes the resources, including ML compute instances and ML storage volumes, to use for model training. '
    properties:
      InstanceCount:
        $ref: '#/definitions/TrainingInstanceCount'
        description: 'The number of ML compute instances to use. For distributed training, provide a value greater than 1. '
      InstanceType:
        $ref: '#/definitions/TrainingInstanceType'
        description: 'The ML compute instance type. '
      VolumeKmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the training job.
      VolumeSizeInGB:
        $ref: '#/definitions/VolumeSizeInGB'
        description: '<p>The size of the ML storage volume that you want to provision. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use the ML storage volume for scratch space. If you want to store the training data in the ML storage volume, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. </p> <p>You must specify sufficient ML storage for your scenario. </p> <note> <p> Amazon SageMaker supports only the General Purpose SSD (gp2) ML storage volume type. </p> </note>'
    required:
      - InstanceType
      - InstanceCount
      - VolumeSizeInGB
    type: object
  ResourceInUse:
    description: Resource being accessed is in use.
    properties:
      Message:
        $ref: '#/definitions/FailureReason'
    type: object
  ResourceLimitExceeded:
    description: ' You have exceeded an Amazon SageMaker resource limit. For example, you might have too many training jobs created. '
    properties:
      Message:
        $ref: '#/definitions/FailureReason'
    type: object
  ResourceNotFound:
    description: Resource being access is not found.
    properties:
      Message:
        $ref: '#/definitions/FailureReason'
    type: object
  RoleArn:
    maxLength: 2048
    minLength: 20
    pattern: '^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
    type: string
  S3DataDistribution:
    enum:
      - FullyReplicated
      - ShardedByS3Key
    type: string
  S3DataSource:
    description: Describes the S3 data source.
    properties:
      S3DataDistributionType:
        $ref: '#/definitions/S3DataDistribution'
        description: '<p>If you want Amazon SageMaker to replicate the entire dataset on each ML compute instance that is launched for model training, specify <code>FullyReplicated</code>. </p> <p>If you want Amazon SageMaker to replicate a subset of data on each ML compute instance that is launched for model training, specify <code>ShardedByS3Key</code>. If there are <i>n</i> ML compute instances launched for a training job, each instance gets approximately 1/<i>n</i> of the number of S3 objects. In this case, model training on each machine uses only the subset of training data. </p> <p>Don''t choose more ML compute instances for training than available S3 objects. If you do, some nodes won''t get any data and you will pay for nodes that aren''t getting any training data. This applies in both FILE and PIPE modes. Keep this in mind when developing algorithms. </p> <p>In distributed training, where you use multiple ML compute EC2 instances, you might choose <code>ShardedByS3Key</code>. If the algorithm requires copying training data to the ML storage volume (when <code>TrainingInputMode</code> is set to <code>File</code>), this copies 1/<i>n</i> of the number of objects. </p>'
      S3DataType:
        $ref: '#/definitions/S3DataType'
        description: '<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for model training. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for model training. </p>'
      S3Uri:
        $ref: '#/definitions/S3Uri'
        description: '<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example: </p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[</code> </p> <p> <code> {"prefix": "s3://customer_bucket/some/prefix/"},</code> </p> <p> <code> "relative/path/to/custdata-1",</code> </p> <p> <code> "relative/path/custdata-2",</code> </p> <p> <code> ...</code> </p> <p> <code> ]</code> </p> <p> The preceding JSON matches the following <code>s3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-1</code> </p> <p> <code>...</code> </p> <p> The complete set of <code>s3uris</code> in this manifest constitutes the input data for the channel for this datasource. The object that each <code>s3uris</code> points to must readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf. </p> </li> </ul>'
    required:
      - S3DataType
      - S3Uri
    type: object
  S3DataType:
    enum:
      - ManifestFile
      - S3Prefix
    type: string
  S3Uri:
    maxLength: 1024
    pattern: '^(https|s3)://([^/]+)/?(.*)$'
    type: string
  SecondaryStatus:
    enum:
      - Starting
      - Downloading
      - Training
      - Uploading
      - Stopping
      - Stopped
      - MaxRuntimeExceeded
      - Completed
      - Failed
    type: string
  SecurityGroupId:
    maxLength: 32
    type: string
  SecurityGroupIds:
    items:
      $ref: '#/definitions/SecurityGroupId'
    maxItems: 5
    type: array
  SessionExpirationDurationInSeconds:
    maximum: 43200
    minimum: 1800
    type: integer
  SortBy:
    enum:
      - Name
      - CreationTime
      - Status
    type: string
  SortOrder:
    enum:
      - Ascending
      - Descending
    type: string
  StartNotebookInstanceInput:
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance to start.
    required:
      - NotebookInstanceName
    type: object
  StopNotebookInstanceInput:
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance to terminate.
    required:
      - NotebookInstanceName
    type: object
  StopTrainingJobRequest:
    properties:
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: The name of the training job to stop.
    required:
      - TrainingJobName
    type: object
  StoppingCondition:
    description: '<p>Specifies how long model training can run. When model training reaches the limit, Amazon SageMaker ends the training job. Use this API to cap model training cost.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of training is not lost. </p> <p>Training algorithms provided by Amazon SageMaker automatically saves the intermediate results of a model training job (it is best effort case, as model might not be ready to save as some stages, for example training just started). This intermediate data is a valid model artifact. You can use it to create a model (<code>CreateModel</code>). </p>'
    properties:
      MaxRuntimeInSeconds:
        $ref: '#/definitions/MaxRuntimeInSeconds'
        description: 'The maximum length of time, in seconds, that the training job can run. If model training does not complete during this time, Amazon SageMaker ends the job. If value is not specified, default value is 1 day. Maximum value is 5 days.'
    type: object
  SubnetId:
    maxLength: 32
    type: string
  Subnets:
    items:
      $ref: '#/definitions/SubnetId'
    maxItems: 16
    minItems: 1
    type: array
  Tag:
    description: 'Describes a tag. '
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The tag key.
      Value:
        $ref: '#/definitions/TagValue'
        description: The tag value.
    required:
      - Key
      - Value
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^((?!aws:)[\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 50
    minItems: 0
    type: array
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TaskCount:
    minimum: 1
    type: integer
  Timestamp:
    format: date-time
    type: string
  TrainingInputMode:
    enum:
      - Pipe
      - File
    type: string
  TrainingInstanceCount:
    minimum: 1
    type: integer
  TrainingInstanceType:
    enum:
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.m5.large
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge
      - ml.c4.xlarge
      - ml.c4.2xlarge
      - ml.c4.4xlarge
      - ml.c4.8xlarge
      - ml.p2.xlarge
      - ml.p2.8xlarge
      - ml.p2.16xlarge
      - ml.p3.2xlarge
      - ml.p3.8xlarge
      - ml.p3.16xlarge
      - ml.c5.xlarge
      - ml.c5.2xlarge
      - ml.c5.4xlarge
      - ml.c5.9xlarge
      - ml.c5.18xlarge
    type: string
  TrainingJobArn:
    maxLength: 256
    pattern: 'arn:aws[a-z\-]*:sagemaker:[\p{Alnum}\-]*:[0-9]{12}:training-job/.*'
    type: string
  TrainingJobName:
    maxLength: 63
    minLength: 1
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    type: string
  TrainingJobStatus:
    enum:
      - InProgress
      - Completed
      - Failed
      - Stopping
      - Stopped
    type: string
  TrainingJobSummaries:
    items:
      $ref: '#/definitions/TrainingJobSummary'
    type: array
  TrainingJobSummary:
    description: Provides summary information about a training job.
    properties:
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the training job was created.
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: ' Timestamp when the training job was last modified. '
      TrainingEndTime:
        $ref: '#/definitions/Timestamp'
        description: 'A timestamp that shows when the training job ended. This field is set only if the training job has one of the terminal statuses (<code>Completed</code>, <code>Failed</code>, or <code>Stopped</code>). '
      TrainingJobArn:
        $ref: '#/definitions/TrainingJobArn'
        description: The Amazon Resource Name (ARN) of the training job.
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: The name of the training job that you want a summary for.
      TrainingJobStatus:
        $ref: '#/definitions/TrainingJobStatus'
        description: The status of the training job.
    required:
      - TrainingJobName
      - TrainingJobArn
      - CreationTime
      - TrainingJobStatus
    type: object
  UpdateEndpointInput:
    properties:
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: The name of the new endpoint configuration.
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of the endpoint whose configuration you want to update.
    required:
      - EndpointName
      - EndpointConfigName
    type: object
  UpdateEndpointOutput:
    properties:
      EndpointArn:
        $ref: '#/definitions/EndpointArn'
        description: The Amazon Resource Name (ARN) of the endpoint.
    required:
      - EndpointArn
    type: object
  UpdateEndpointWeightsAndCapacitiesInput:
    properties:
      DesiredWeightsAndCapacities:
        $ref: '#/definitions/DesiredWeightAndCapacityList'
        description: An object that provides new capacity and weight values for a variant.
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of an existing Amazon SageMaker endpoint.
    required:
      - EndpointName
      - DesiredWeightsAndCapacities
    type: object
  UpdateEndpointWeightsAndCapacitiesOutput:
    properties:
      EndpointArn:
        $ref: '#/definitions/EndpointArn'
        description: The Amazon Resource Name (ARN) of the updated endpoint.
    required:
      - EndpointArn
    type: object
  UpdateNotebookInstanceInput:
    properties:
      InstanceType:
        $ref: '#/definitions/InstanceType'
        description: The Amazon ML compute instance type.
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance to update.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: Amazon Resource Name (ARN) of the IAM role to associate with the instance.
    required:
      - NotebookInstanceName
    type: object
  UpdateNotebookInstanceLifecycleConfigInput:
    properties:
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration.
      OnCreate:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'The shell script that runs only once, when you create a notebook instance'
      OnStart:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'The shell script that runs every time you start a notebook instance, including when you create the notebook instance.'
    required:
      - NotebookInstanceLifecycleConfigName
    type: object
  UpdateNotebookInstanceLifecycleConfigOutput:
    properties: {}
    type: object
  UpdateNotebookInstanceOutput:
    properties: {}
    type: object
  Url:
    maxLength: 1024
    pattern: '^(https|s3)://([^/]+)/?(.*)$'
    type: string
  VariantName:
    maxLength: 63
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    type: string
  VariantWeight:
    format: float
    minimum: 0
    type: number
  VolumeSizeInGB:
    minimum: 1
    type: integer
  VpcConfig:
    description: 'Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a>host-vpc</a> and <a>train-vpc</a>.'
    properties:
      SecurityGroupIds:
        $ref: '#/definitions/VpcSecurityGroupIds'
        description: 'The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field.'
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The ID of the subnets in the VPC to which you want to connect your training job or model.
    required:
      - SecurityGroupIds
      - Subnets
    type: object
  VpcSecurityGroupIds:
    items:
      $ref: '#/definitions/SecurityGroupId'
    maxItems: 5
    minItems: 1
    type: array
